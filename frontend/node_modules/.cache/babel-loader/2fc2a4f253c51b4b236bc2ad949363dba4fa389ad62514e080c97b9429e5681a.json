{"ast":null,"code":"var _jsxFileName = \"/Users/soshhowell/Apps/inkwell-internal/frontend/src/components/PromptsSidebar.js\";\nimport React from 'react';\nimport './PromptsSidebar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PromptsSidebar = ({\n  prompts,\n  onSelectPrompt,\n  selectedPromptId,\n  onNewPrompt,\n  loading\n}) => {\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"aside\", {\n      className: \"prompts-sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"prompts-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Prompts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"prompts-loading\",\n        children: \"Loading prompts...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"aside\", {\n    className: \"prompts-sidebar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"prompts-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Prompts (\", prompts.length, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"new-prompt-btn\",\n        onClick: onNewPrompt,\n        children: \"\\u2795 New Prompt\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"prompts-list\",\n      children: prompts.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-prompts\",\n        children: \"No prompts yet. Create your first prompt!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this) : prompts.map(prompt => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `prompt-button ${selectedPromptId === prompt.id ? 'prompt-button-selected' : ''}`,\n        onClick: () => onSelectPrompt(prompt),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"prompt-button-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"prompt-name\",\n            children: prompt.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `prompt-status status-${prompt.status}`,\n            children: prompt.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 15\n        }, this)\n      }, prompt.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_c = PromptsSidebar;\nexport default PromptsSidebar;\nvar _c;\n$RefreshReg$(_c, \"PromptsSidebar\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","PromptsSidebar","prompts","onSelectPrompt","selectedPromptId","onNewPrompt","loading","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","onClick","map","prompt","id","name","status","_c","$RefreshReg$"],"sources":["/Users/soshhowell/Apps/inkwell-internal/frontend/src/components/PromptsSidebar.js"],"sourcesContent":["import React from 'react';\nimport './PromptsSidebar.css';\n\nconst PromptsSidebar = ({ prompts, onSelectPrompt, selectedPromptId, onNewPrompt, loading }) => {\n  if (loading) {\n    return (\n      <aside className=\"prompts-sidebar\">\n        <div className=\"prompts-header\">\n          <h3>Prompts</h3>\n        </div>\n        <div className=\"prompts-loading\">Loading prompts...</div>\n      </aside>\n    );\n  }\n\n  return (\n    <aside className=\"prompts-sidebar\">\n      <div className=\"prompts-header\">\n        <h3>Prompts ({prompts.length})</h3>\n        <button className=\"new-prompt-btn\" onClick={onNewPrompt}>\n          âž• New Prompt\n        </button>\n      </div>\n      <div className=\"prompts-list\">\n        {prompts.length === 0 ? (\n          <div className=\"no-prompts\">No prompts yet. Create your first prompt!</div>\n        ) : (\n          prompts.map((prompt) => (\n            <button\n              key={prompt.id}\n              className={`prompt-button ${selectedPromptId === prompt.id ? 'prompt-button-selected' : ''}`}\n              onClick={() => onSelectPrompt(prompt)}\n            >\n              <div className=\"prompt-button-content\">\n                <span className=\"prompt-name\">{prompt.name}</span>\n                <span className={`prompt-status status-${prompt.status}`}>\n                  {prompt.status}\n                </span>\n              </div>\n            </button>\n          ))\n        )}\n      </div>\n    </aside>\n  );\n};\n\nexport default PromptsSidebar;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}