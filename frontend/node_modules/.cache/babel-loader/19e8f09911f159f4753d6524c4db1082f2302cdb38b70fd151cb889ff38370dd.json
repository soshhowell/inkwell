{"ast":null,"code":"var _jsxFileName = \"/Users/soshhowell/Apps/inkwell-internal/frontend/src/App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route, useNavigate, useParams, useLocation } from 'react-router-dom';\nimport axios from 'axios';\nimport Header from './components/Header';\nimport PromptsSidebar from './components/PromptsSidebar';\nimport PromptDetails from './components/PromptDetails';\nimport ProjectEdit from './components/ProjectEdit';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PromptApp() {\n  _s();\n  const navigate = useNavigate();\n  const params = useParams();\n  const location = useLocation();\n  const [prompts, setPrompts] = useState([]);\n  const [projects, setProjects] = useState([]);\n  const [selectedProjectId, setSelectedProjectId] = useState(null);\n  const [statusFilter, setStatusFilter] = useState('draft');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(null);\n  const [selectedPrompt, setSelectedPrompt] = useState(null);\n  const [showNewForm, setShowNewForm] = useState(false);\n\n  // Fetch prompts and projects on component mount\n  useEffect(() => {\n    fetchProjects();\n    fetchPrompts();\n  }, []);\n\n  // Fetch prompts when project selection or status filter changes\n  useEffect(() => {\n    fetchPrompts();\n  }, [selectedProjectId, statusFilter]);\n\n  // Handle URL parameter changes\n  useEffect(() => {\n    console.log('URL params changed:', params.promptId);\n    console.log('Current path:', location.pathname);\n\n    // Check for /prompt/new directly from path\n    if (location.pathname === '/prompt/new') {\n      console.log('Setting up new prompt form (via path check)');\n      setSelectedPrompt(null);\n      setShowNewForm(true);\n    } else if (params.promptId === 'new') {\n      console.log('Setting up new prompt form (via params)');\n      // Show new prompt form\n      setSelectedPrompt(null);\n      setShowNewForm(true);\n    } else if (params.promptId) {\n      console.log('Loading existing prompt:', params.promptId);\n      // Convert promptId to number since URL params are strings  \n      const promptId = parseInt(params.promptId);\n      fetchPromptById(promptId);\n    } else {\n      console.log('Showing empty state');\n      // Root path - show empty state\n      setSelectedPrompt(null);\n      setShowNewForm(false);\n    }\n  }, [params.promptId, location.pathname]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const fetchProjects = async () => {\n    try {\n      const response = await axios.get('/api/projects');\n      setProjects(response.data);\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError('Failed to fetch projects: ' + (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.detail) || err.message));\n    }\n  };\n  const fetchPrompts = async () => {\n    try {\n      setLoading(true);\n      let url = '/api/prompts?';\n      const params = new URLSearchParams();\n      if (selectedProjectId) {\n        params.append('project_id', selectedProjectId);\n      }\n      if (statusFilter && statusFilter !== 'all') {\n        params.append('status', statusFilter);\n      }\n      url += params.toString();\n      const response = await axios.get(url);\n      setPrompts(response.data);\n      setError(null);\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      setError('Failed to fetch prompts: ' + (((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.detail) || err.message));\n    } finally {\n      setLoading(false);\n    }\n  };\n  const fetchPromptById = async promptId => {\n    try {\n      const response = await axios.get(`/api/prompts/${promptId}`);\n      setSelectedPrompt(response.data);\n      setShowNewForm(false);\n      setError(null);\n    } catch (err) {\n      var _err$response3, _err$response3$data, _err$response4;\n      setError('Failed to fetch prompt: ' + (((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : (_err$response3$data = _err$response3.data) === null || _err$response3$data === void 0 ? void 0 : _err$response3$data.detail) || err.message));\n      // If prompt not found, redirect to home\n      if (((_err$response4 = err.response) === null || _err$response4 === void 0 ? void 0 : _err$response4.status) === 404) {\n        navigate('/');\n      }\n    }\n  };\n  const createPrompt = async promptData => {\n    try {\n      // If a project is selected, set the project_id on new prompts\n      const promptWithProject = {\n        ...promptData,\n        project_id: promptData.project_id || selectedProjectId\n      };\n      const response = await axios.post('/api/prompts', promptWithProject);\n      const newPrompt = response.data;\n      setPrompts([newPrompt, ...prompts]);\n      navigate(`/prompt/${newPrompt.id}`); // Navigate to the newly created prompt\n      setError(null);\n      return newPrompt;\n    } catch (err) {\n      var _err$response5, _err$response5$data;\n      setError('Failed to create prompt: ' + (((_err$response5 = err.response) === null || _err$response5 === void 0 ? void 0 : (_err$response5$data = _err$response5.data) === null || _err$response5$data === void 0 ? void 0 : _err$response5$data.detail) || err.message));\n      throw err;\n    }\n  };\n  const updatePrompt = async promptData => {\n    try {\n      if (!selectedPrompt) return;\n      const response = await axios.put(`/api/prompts/${selectedPrompt.id}`, promptData);\n      const updatedPrompt = response.data;\n\n      // Update the prompts list with the updated prompt\n      setPrompts(prompts.map(prompt => prompt.id === selectedPrompt.id ? updatedPrompt : prompt));\n\n      // Update the selected prompt state\n      setSelectedPrompt(updatedPrompt);\n\n      // Refresh the prompts list to ensure we have the latest data\n      // This is especially important when project assignments change\n      fetchPrompts();\n\n      // Clear any existing errors, but don't show success message since we have auto-save status\n      setError(null);\n      return updatedPrompt;\n    } catch (err) {\n      var _err$response6, _err$response6$data;\n      setError('Failed to update prompt: ' + (((_err$response6 = err.response) === null || _err$response6 === void 0 ? void 0 : (_err$response6$data = _err$response6.data) === null || _err$response6$data === void 0 ? void 0 : _err$response6$data.detail) || err.message));\n      throw err;\n    }\n  };\n  const deletePrompt = async promptId => {\n    try {\n      await axios.delete(`/api/prompts/${promptId}`);\n      setPrompts(prompts.filter(prompt => prompt.id !== promptId));\n      // If we deleted the selected prompt, navigate back to home\n      if (selectedPrompt && selectedPrompt.id === promptId) {\n        navigate('/');\n        setSelectedPrompt(null);\n      }\n      setSuccess('Prompt deleted successfully!');\n      setError(null);\n      setTimeout(() => setSuccess(null), 3000);\n    } catch (err) {\n      var _err$response7, _err$response7$data;\n      setError('Failed to delete prompt: ' + (((_err$response7 = err.response) === null || _err$response7 === void 0 ? void 0 : (_err$response7$data = _err$response7.data) === null || _err$response7$data === void 0 ? void 0 : _err$response7$data.detail) || err.message));\n    }\n  };\n  const handleNewPrompt = () => {\n    navigate('/prompt/new');\n  };\n  const handleSelectPrompt = prompt => {\n    navigate(`/prompt/${prompt.id}`);\n  };\n  const handleCancelForm = () => {\n    setShowNewForm(false);\n    setError(null);\n    setSuccess(null);\n  };\n  const handleSelectProject = projectId => {\n    setSelectedProjectId(projectId);\n    // Clear selected prompt when changing project\n    setSelectedPrompt(null);\n    navigate('/');\n  };\n  const handleNewProject = async projectName => {\n    try {\n      const response = await axios.post('/api/projects', {\n        name: projectName\n      });\n      const newProject = response.data;\n      setProjects([...projects, newProject]);\n      setSuccess('Project created successfully!');\n      setError(null);\n      setTimeout(() => setSuccess(null), 3000);\n      return newProject;\n    } catch (err) {\n      var _err$response8, _err$response8$data;\n      setError('Failed to create project: ' + (((_err$response8 = err.response) === null || _err$response8 === void 0 ? void 0 : (_err$response8$data = _err$response8.data) === null || _err$response8$data === void 0 ? void 0 : _err$response8$data.detail) || err.message));\n      throw err;\n    }\n  };\n  const handleEditProject = projectId => {\n    navigate(`/project/${projectId}`);\n  };\n  const handleStatusFilterChange = newStatusFilter => {\n    setStatusFilter(newStatusFilter);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PromptsSidebar, {\n      prompts: prompts,\n      onSelectPrompt: handleSelectPrompt,\n      selectedPromptId: selectedPrompt === null || selectedPrompt === void 0 ? void 0 : selectedPrompt.id,\n      onNewPrompt: handleNewPrompt,\n      loading: loading,\n      projects: projects,\n      selectedProjectId: selectedProjectId,\n      onSelectProject: handleSelectProject,\n      onNewProject: handleNewProject,\n      onEditProject: handleEditProject,\n      statusFilter: statusFilter,\n      onStatusFilterChange: handleStatusFilterChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main-content\",\n      children: /*#__PURE__*/_jsxDEV(PromptDetails, {\n        selectedPrompt: selectedPrompt,\n        showNewForm: showNewForm,\n        onCreatePrompt: createPrompt,\n        onUpdatePrompt: updatePrompt,\n        onDeletePrompt: deletePrompt,\n        onCancelForm: handleCancelForm,\n        error: error,\n        success: success,\n        projects: projects,\n        selectedProjectId: selectedProjectId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 222,\n    columnNumber: 5\n  }, this);\n}\n_s(PromptApp, \"Dyt6YUD9G1uet3E3d/BhfIBKWS8=\", false, function () {\n  return [useNavigate, useParams, useLocation];\n});\n_c = PromptApp;\nfunction ProjectEditApp() {\n  _s2();\n  const navigate = useNavigate();\n  const [projects, setProjects] = useState([]);\n  const [selectedProjectId, setSelectedProjectId] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(null);\n  useEffect(() => {\n    fetchProjects();\n  }, []);\n  const fetchProjects = async () => {\n    try {\n      const response = await axios.get('/api/projects');\n      setProjects(response.data);\n      setLoading(false);\n    } catch (err) {\n      var _err$response9, _err$response9$data;\n      setError('Failed to fetch projects: ' + (((_err$response9 = err.response) === null || _err$response9 === void 0 ? void 0 : (_err$response9$data = _err$response9.data) === null || _err$response9$data === void 0 ? void 0 : _err$response9$data.detail) || err.message));\n      setLoading(false);\n    }\n  };\n  const handleSelectProject = projectId => {\n    setSelectedProjectId(projectId);\n    navigate('/');\n  };\n  const handleNewProject = async projectName => {\n    try {\n      const response = await axios.post('/api/projects', {\n        name: projectName\n      });\n      const newProject = response.data;\n      setProjects([...projects, newProject]);\n      setSuccess('Project created successfully!');\n      setError(null);\n      setTimeout(() => setSuccess(null), 3000);\n      return newProject;\n    } catch (err) {\n      var _err$response0, _err$response0$data;\n      setError('Failed to create project: ' + (((_err$response0 = err.response) === null || _err$response0 === void 0 ? void 0 : (_err$response0$data = _err$response0.data) === null || _err$response0$data === void 0 ? void 0 : _err$response0$data.detail) || err.message));\n      throw err;\n    }\n  };\n  const handleEditProject = projectId => {\n    navigate(`/project/${projectId}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PromptsSidebar, {\n      prompts: [],\n      onSelectPrompt: () => {},\n      selectedPromptId: null,\n      onNewPrompt: () => navigate('/'),\n      loading: false,\n      projects: projects,\n      selectedProjectId: selectedProjectId,\n      onSelectProject: handleSelectProject,\n      onNewProject: handleNewProject,\n      onEditProject: handleEditProject,\n      hidePrompts: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main-content\",\n      children: /*#__PURE__*/_jsxDEV(ProjectEdit, {\n        onProjectUpdated: fetchProjects\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 304,\n    columnNumber: 5\n  }, this);\n}\n_s2(ProjectEditApp, \"KRwKk0uItk4JV54n5WCKAhjZet4=\", false, function () {\n  return [useNavigate];\n});\n_c2 = ProjectEditApp;\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(PromptApp, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/prompt/new\",\n        element: /*#__PURE__*/_jsxDEV(PromptApp, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 44\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/prompt/:promptId\",\n        element: /*#__PURE__*/_jsxDEV(PromptApp, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 50\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/project/:projectId\",\n        element: /*#__PURE__*/_jsxDEV(ProjectEditApp, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 52\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 328,\n    columnNumber: 5\n  }, this);\n}\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"PromptApp\");\n$RefreshReg$(_c2, \"ProjectEditApp\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Routes","Route","useNavigate","useParams","useLocation","axios","Header","PromptsSidebar","PromptDetails","ProjectEdit","jsxDEV","_jsxDEV","PromptApp","_s","navigate","params","location","prompts","setPrompts","projects","setProjects","selectedProjectId","setSelectedProjectId","statusFilter","setStatusFilter","loading","setLoading","error","setError","success","setSuccess","selectedPrompt","setSelectedPrompt","showNewForm","setShowNewForm","fetchProjects","fetchPrompts","console","log","promptId","pathname","parseInt","fetchPromptById","response","get","data","err","_err$response","_err$response$data","detail","message","url","URLSearchParams","append","toString","_err$response2","_err$response2$data","_err$response3","_err$response3$data","_err$response4","status","createPrompt","promptData","promptWithProject","project_id","post","newPrompt","id","_err$response5","_err$response5$data","updatePrompt","put","updatedPrompt","map","prompt","_err$response6","_err$response6$data","deletePrompt","delete","filter","setTimeout","_err$response7","_err$response7$data","handleNewPrompt","handleSelectPrompt","handleCancelForm","handleSelectProject","projectId","handleNewProject","projectName","name","newProject","_err$response8","_err$response8$data","handleEditProject","handleStatusFilterChange","newStatusFilter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSelectPrompt","selectedPromptId","onNewPrompt","onSelectProject","onNewProject","onEditProject","onStatusFilterChange","onCreatePrompt","onUpdatePrompt","onDeletePrompt","onCancelForm","_c","ProjectEditApp","_s2","_err$response9","_err$response9$data","_err$response0","_err$response0$data","hidePrompts","onProjectUpdated","_c2","App","path","element","_c3","$RefreshReg$"],"sources":["/Users/soshhowell/Apps/inkwell-internal/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route, useNavigate, useParams, useLocation } from 'react-router-dom';\nimport axios from 'axios';\nimport Header from './components/Header';\nimport PromptsSidebar from './components/PromptsSidebar';\nimport PromptDetails from './components/PromptDetails';\nimport ProjectEdit from './components/ProjectEdit';\nimport './App.css';\n\nfunction PromptApp() {\n  const navigate = useNavigate();\n  const params = useParams();\n  const location = useLocation();\n  const [prompts, setPrompts] = useState([]);\n  const [projects, setProjects] = useState([]);\n  const [selectedProjectId, setSelectedProjectId] = useState(null);\n  const [statusFilter, setStatusFilter] = useState('draft');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(null);\n  const [selectedPrompt, setSelectedPrompt] = useState(null);\n  const [showNewForm, setShowNewForm] = useState(false);\n\n  // Fetch prompts and projects on component mount\n  useEffect(() => {\n    fetchProjects();\n    fetchPrompts();\n  }, []);\n\n  // Fetch prompts when project selection or status filter changes\n  useEffect(() => {\n    fetchPrompts();\n  }, [selectedProjectId, statusFilter]);\n\n  // Handle URL parameter changes\n  useEffect(() => {\n    console.log('URL params changed:', params.promptId);\n    console.log('Current path:', location.pathname);\n    \n    // Check for /prompt/new directly from path\n    if (location.pathname === '/prompt/new') {\n      console.log('Setting up new prompt form (via path check)');\n      setSelectedPrompt(null);\n      setShowNewForm(true);\n    } else if (params.promptId === 'new') {\n      console.log('Setting up new prompt form (via params)');\n      // Show new prompt form\n      setSelectedPrompt(null);\n      setShowNewForm(true);\n    } else if (params.promptId) {\n      console.log('Loading existing prompt:', params.promptId);\n      // Convert promptId to number since URL params are strings  \n      const promptId = parseInt(params.promptId);\n      fetchPromptById(promptId);\n    } else {\n      console.log('Showing empty state');\n      // Root path - show empty state\n      setSelectedPrompt(null);\n      setShowNewForm(false);\n    }\n  }, [params.promptId, location.pathname]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const fetchProjects = async () => {\n    try {\n      const response = await axios.get('/api/projects');\n      setProjects(response.data);\n    } catch (err) {\n      setError('Failed to fetch projects: ' + (err.response?.data?.detail || err.message));\n    }\n  };\n\n  const fetchPrompts = async () => {\n    try {\n      setLoading(true);\n      let url = '/api/prompts?';\n      const params = new URLSearchParams();\n      \n      if (selectedProjectId) {\n        params.append('project_id', selectedProjectId);\n      }\n      \n      if (statusFilter && statusFilter !== 'all') {\n        params.append('status', statusFilter);\n      }\n      \n      url += params.toString();\n      const response = await axios.get(url);\n      setPrompts(response.data);\n      setError(null);\n    } catch (err) {\n      setError('Failed to fetch prompts: ' + (err.response?.data?.detail || err.message));\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const fetchPromptById = async (promptId) => {\n    try {\n      const response = await axios.get(`/api/prompts/${promptId}`);\n      setSelectedPrompt(response.data);\n      setShowNewForm(false);\n      setError(null);\n    } catch (err) {\n      setError('Failed to fetch prompt: ' + (err.response?.data?.detail || err.message));\n      // If prompt not found, redirect to home\n      if (err.response?.status === 404) {\n        navigate('/');\n      }\n    }\n  };\n\n  const createPrompt = async (promptData) => {\n    try {\n      // If a project is selected, set the project_id on new prompts\n      const promptWithProject = {\n        ...promptData,\n        project_id: promptData.project_id || selectedProjectId\n      };\n      \n      const response = await axios.post('/api/prompts', promptWithProject);\n      const newPrompt = response.data;\n      setPrompts([newPrompt, ...prompts]);\n      navigate(`/prompt/${newPrompt.id}`); // Navigate to the newly created prompt\n      setError(null);\n      return newPrompt;\n    } catch (err) {\n      setError('Failed to create prompt: ' + (err.response?.data?.detail || err.message));\n      throw err;\n    }\n  };\n\n  const updatePrompt = async (promptData) => {\n    try {\n      if (!selectedPrompt) return;\n      \n      const response = await axios.put(`/api/prompts/${selectedPrompt.id}`, promptData);\n      const updatedPrompt = response.data;\n      \n      // Update the prompts list with the updated prompt\n      setPrompts(prompts.map(prompt => \n        prompt.id === selectedPrompt.id ? updatedPrompt : prompt\n      ));\n      \n      // Update the selected prompt state\n      setSelectedPrompt(updatedPrompt);\n      \n      // Refresh the prompts list to ensure we have the latest data\n      // This is especially important when project assignments change\n      fetchPrompts();\n      \n      // Clear any existing errors, but don't show success message since we have auto-save status\n      setError(null);\n      return updatedPrompt;\n    } catch (err) {\n      setError('Failed to update prompt: ' + (err.response?.data?.detail || err.message));\n      throw err;\n    }\n  };\n\n  const deletePrompt = async (promptId) => {\n    try {\n      await axios.delete(`/api/prompts/${promptId}`);\n      setPrompts(prompts.filter(prompt => prompt.id !== promptId));\n      // If we deleted the selected prompt, navigate back to home\n      if (selectedPrompt && selectedPrompt.id === promptId) {\n        navigate('/');\n        setSelectedPrompt(null);\n      }\n      setSuccess('Prompt deleted successfully!');\n      setError(null);\n      setTimeout(() => setSuccess(null), 3000);\n    } catch (err) {\n      setError('Failed to delete prompt: ' + (err.response?.data?.detail || err.message));\n    }\n  };\n\n  const handleNewPrompt = () => {\n    navigate('/prompt/new');\n  };\n\n  const handleSelectPrompt = (prompt) => {\n    navigate(`/prompt/${prompt.id}`);\n  };\n\n  const handleCancelForm = () => {\n    setShowNewForm(false);\n    setError(null);\n    setSuccess(null);\n  };\n\n  const handleSelectProject = (projectId) => {\n    setSelectedProjectId(projectId);\n    // Clear selected prompt when changing project\n    setSelectedPrompt(null);\n    navigate('/');\n  };\n\n  const handleNewProject = async (projectName) => {\n    try {\n      const response = await axios.post('/api/projects', { name: projectName });\n      const newProject = response.data;\n      setProjects([...projects, newProject]);\n      setSuccess('Project created successfully!');\n      setError(null);\n      setTimeout(() => setSuccess(null), 3000);\n      return newProject;\n    } catch (err) {\n      setError('Failed to create project: ' + (err.response?.data?.detail || err.message));\n      throw err;\n    }\n  };\n\n  const handleEditProject = (projectId) => {\n    navigate(`/project/${projectId}`);\n  };\n\n  const handleStatusFilterChange = (newStatusFilter) => {\n    setStatusFilter(newStatusFilter);\n  };\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <PromptsSidebar \n        prompts={prompts} \n        onSelectPrompt={handleSelectPrompt}\n        selectedPromptId={selectedPrompt?.id}\n        onNewPrompt={handleNewPrompt}\n        loading={loading}\n        projects={projects}\n        selectedProjectId={selectedProjectId}\n        onSelectProject={handleSelectProject}\n        onNewProject={handleNewProject}\n        onEditProject={handleEditProject}\n        statusFilter={statusFilter}\n        onStatusFilterChange={handleStatusFilterChange}\n      />\n      <main className=\"main-content\">\n        <PromptDetails\n          selectedPrompt={selectedPrompt}\n          showNewForm={showNewForm}\n          onCreatePrompt={createPrompt}\n          onUpdatePrompt={updatePrompt}\n          onDeletePrompt={deletePrompt}\n          onCancelForm={handleCancelForm}\n          error={error}\n          success={success}\n          projects={projects}\n          selectedProjectId={selectedProjectId}\n        />\n      </main>\n    </div>\n  );\n}\n\nfunction ProjectEditApp() {\n  const navigate = useNavigate();\n  const [projects, setProjects] = useState([]);\n  const [selectedProjectId, setSelectedProjectId] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(null);\n\n  useEffect(() => {\n    fetchProjects();\n  }, []);\n\n  const fetchProjects = async () => {\n    try {\n      const response = await axios.get('/api/projects');\n      setProjects(response.data);\n      setLoading(false);\n    } catch (err) {\n      setError('Failed to fetch projects: ' + (err.response?.data?.detail || err.message));\n      setLoading(false);\n    }\n  };\n\n  const handleSelectProject = (projectId) => {\n    setSelectedProjectId(projectId);\n    navigate('/');\n  };\n\n  const handleNewProject = async (projectName) => {\n    try {\n      const response = await axios.post('/api/projects', { name: projectName });\n      const newProject = response.data;\n      setProjects([...projects, newProject]);\n      setSuccess('Project created successfully!');\n      setError(null);\n      setTimeout(() => setSuccess(null), 3000);\n      return newProject;\n    } catch (err) {\n      setError('Failed to create project: ' + (err.response?.data?.detail || err.message));\n      throw err;\n    }\n  };\n\n  const handleEditProject = (projectId) => {\n    navigate(`/project/${projectId}`);\n  };\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <PromptsSidebar \n        prompts={[]} \n        onSelectPrompt={() => {}}\n        selectedPromptId={null}\n        onNewPrompt={() => navigate('/')}\n        loading={false}\n        projects={projects}\n        selectedProjectId={selectedProjectId}\n        onSelectProject={handleSelectProject}\n        onNewProject={handleNewProject}\n        onEditProject={handleEditProject}\n        hidePrompts={true}\n      />\n      <main className=\"main-content\">\n        <ProjectEdit onProjectUpdated={fetchProjects} />\n      </main>\n    </div>\n  );\n}\n\nfunction App() {\n  return (\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<PromptApp />} />\n        <Route path=\"/prompt/new\" element={<PromptApp />} />\n        <Route path=\"/prompt/:promptId\" element={<PromptApp />} />\n        <Route path=\"/project/:projectId\" element={<ProjectEditApp />} />\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}