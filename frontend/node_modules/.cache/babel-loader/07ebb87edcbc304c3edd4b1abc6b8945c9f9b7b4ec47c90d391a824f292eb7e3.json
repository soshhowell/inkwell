{"ast":null,"code":"import React from'react';import PromptForm from'./PromptForm';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const PromptDetails=_ref=>{let{selectedPrompt,showNewForm,onCreatePrompt,onUpdatePrompt,onDeletePrompt,onCancelForm,error,success,projects=[],selectedProjectId=null}=_ref;// Auto-save handler for existing prompts\nconst handleAutoSave=async formData=>{if(selectedPrompt&&onUpdatePrompt){await onUpdatePrompt(formData);}};// Auto-save handler for new prompts\nconst handleNewPromptAutoSave=async formData=>{// Only autosave if there's actually content to save\nif(formData.name.trim()||formData.content.trim()){// Create the prompt automatically\nawait onCreatePrompt(formData);}};if(showNewForm){return/*#__PURE__*/_jsxs(\"div\",{className:\"prompt-details\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"prompt-details-header\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Create New Prompt\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-secondary\",onClick:onCancelForm,children:\"Cancel\"})]}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"error\",children:error}),success&&/*#__PURE__*/_jsx(\"div\",{className:\"success\",children:success}),/*#__PURE__*/_jsx(\"div\",{className:\"card\",children:/*#__PURE__*/_jsx(PromptForm,{onSubmit:onCreatePrompt,projects:projects,selectedProjectId:selectedProjectId,onAutoSave:handleNewPromptAutoSave})})]});}if(!selectedPrompt){return/*#__PURE__*/_jsx(\"div\",{className:\"prompt-details\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"empty-state\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"empty-state-icon\",children:\"\\uD83D\\uDCAC\"}),/*#__PURE__*/_jsx(\"h2\",{children:\"Select a prompt to view details\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Choose a prompt from the list on the left to see its details and options.\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Or click \\\"New Prompt\\\" to create a new one.\"})]})});}return/*#__PURE__*/_jsxs(\"div\",{className:\"prompt-details\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"prompt-details-header\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Edit Prompt\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"prompt-meta\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"prompt-id-badge\",children:[\"#\",selectedPrompt.id]}),/*#__PURE__*/_jsx(\"span\",{className:\"prompt-status-badge status-\".concat(selectedPrompt.status),children:selectedPrompt.status}),selectedPrompt.project_name&&/*#__PURE__*/_jsxs(\"span\",{className:\"prompt-project-badge\",children:[\"\\uD83D\\uDCC1 \",selectedPrompt.project_name]})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"prompt-actions\",children:/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-danger\",onClick:()=>onDeletePrompt(selectedPrompt.id),children:\"Delete\"})})]}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"error\",children:error}),success&&/*#__PURE__*/_jsx(\"div\",{className:\"success\",children:success}),/*#__PURE__*/_jsx(\"div\",{className:\"card\",children:/*#__PURE__*/_jsx(PromptForm,{onSubmit:onUpdatePrompt,initialData:selectedPrompt,projects:projects,selectedProjectId:selectedProjectId,onAutoSave:handleAutoSave})})]});};export default PromptDetails;","map":{"version":3,"names":["React","PromptForm","jsx","_jsx","jsxs","_jsxs","PromptDetails","_ref","selectedPrompt","showNewForm","onCreatePrompt","onUpdatePrompt","onDeletePrompt","onCancelForm","error","success","projects","selectedProjectId","handleAutoSave","formData","handleNewPromptAutoSave","name","trim","content","className","children","onClick","onSubmit","onAutoSave","id","concat","status","project_name","initialData"],"sources":["/Users/soshhowell/Apps/inkwell-internal/frontend/src/components/PromptDetails.js"],"sourcesContent":["import React from 'react';\nimport PromptForm from './PromptForm';\n\nconst PromptDetails = ({ \n  selectedPrompt, \n  showNewForm, \n  onCreatePrompt, \n  onUpdatePrompt, \n  onDeletePrompt,\n  onCancelForm,\n  error,\n  success,\n  projects = [],\n  selectedProjectId = null\n}) => {\n  // Auto-save handler for existing prompts\n  const handleAutoSave = async (formData) => {\n    if (selectedPrompt && onUpdatePrompt) {\n      await onUpdatePrompt(formData);\n    }\n  };\n\n  // Auto-save handler for new prompts\n  const handleNewPromptAutoSave = async (formData) => {\n    // Only autosave if there's actually content to save\n    if (formData.name.trim() || formData.content.trim()) {\n      // Create the prompt automatically\n      await onCreatePrompt(formData);\n    }\n  };\n  if (showNewForm) {\n    return (\n      <div className=\"prompt-details\">\n        <div className=\"prompt-details-header\">\n          <h1>Create New Prompt</h1>\n          <button className=\"btn btn-secondary\" onClick={onCancelForm}>\n            Cancel\n          </button>\n        </div>\n        {error && <div className=\"error\">{error}</div>}\n        {success && <div className=\"success\">{success}</div>}\n        <div className=\"card\">\n          <PromptForm \n            onSubmit={onCreatePrompt} \n            projects={projects}\n            selectedProjectId={selectedProjectId}\n            onAutoSave={handleNewPromptAutoSave}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  if (!selectedPrompt) {\n    return (\n      <div className=\"prompt-details\">\n        <div className=\"empty-state\">\n          <div className=\"empty-state-icon\">üí¨</div>\n          <h2>Select a prompt to view details</h2>\n          <p>Choose a prompt from the list on the left to see its details and options.</p>\n          <p>Or click \"New Prompt\" to create a new one.</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"prompt-details\">\n      <div className=\"prompt-details-header\">\n        <div>\n          <h1>Edit Prompt</h1>\n          <div className=\"prompt-meta\">\n            <span className=\"prompt-id-badge\">#{selectedPrompt.id}</span>\n            <span className={`prompt-status-badge status-${selectedPrompt.status}`}>\n              {selectedPrompt.status}\n            </span>\n            {selectedPrompt.project_name && (\n              <span className=\"prompt-project-badge\">üìÅ {selectedPrompt.project_name}</span>\n            )}\n          </div>\n        </div>\n        <div className=\"prompt-actions\">\n          <button \n            className=\"btn btn-danger\" \n            onClick={() => onDeletePrompt(selectedPrompt.id)}\n          >\n            Delete\n          </button>\n        </div>\n      </div>\n\n      {error && <div className=\"error\">{error}</div>}\n      {success && <div className=\"success\">{success}</div>}\n\n      <div className=\"card\">\n        <PromptForm \n          onSubmit={onUpdatePrompt} \n          initialData={selectedPrompt}\n          projects={projects}\n          selectedProjectId={selectedProjectId}\n          onAutoSave={handleAutoSave}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default PromptDetails;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}